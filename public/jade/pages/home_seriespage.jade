

.fullW.fullH.txtC.rel.pureline
	
	.introseries
		.page
			.abs.top0.left0.txtL.seriesmain(style="margin-top:90px;margin-left:20px")
				h4.montserrat.bolder.sizeXXXLg.lh1.black.LmarXXLg Explore the Pure series
			.prev.abs(style="top:95px;z-index: 350;").txtC.right0.RmarXXXLg
				+smallbutton('Previous', '#/home/purewallet/', null, null, 'hideOnSmart')
			.next.abs(style="bottom:25px;z-index: 350;").txtC.left0.right0
				+smallbutton('Continue', '#/home/pureworld/', null, null, 'hideOnSmart')
			.eco.abs.flowvisible.top0.bottom0.left0.right0.sizeXXXLg
				- let series = [] ;
				- series.push({name:"Chain", title:"Optimizing #[em.purecolor AI-Based Traffic] Handling", desc:"AI technology improves the performance of the blockchain, #[br]optimizing all traffic handling and resolving delays. #[br]Layer 1 pays per task, and Layer 2 handles more complex tasks, #[br]maintaining high integrity at a lower cost."}) ;
				- series.push({name:"Wallet", title:"A #[em.purecolor smart wallet platform] that can be used #[br]even in an #[em.purecolor offline environment]", desc:"Offline transmission of cryptocurrency data, offline token-based connection through software cold storage, token generation outside, and connection with Web3.0 application using user wallet information."}) ;
				- series.push({name:"Contract", title:"#[em.purecolor Electronic contract service] for #[em.purecolor transparency] #[br]and #[em.purecolor fairness] in contract procedures", desc:"Generative smart contracts dynamically generate fair contract procedures with handshake technology, offering identity authentication and electronic signature functions, along with automatic creation and calculation of contract formats and formulas."}) ;
				- series.push({name:"Certificate", title:"#[em.purecolor Forgery detection service] that guarantees the #[em.purecolor originality] of the #[em.purecolor test certificate] based on three technologies", desc:"Our solution offers a robust originality guarantee, leveraging three advanced technologies to ensure encrypted originality, detect copy forgery, automatically generate test certificates, and provide integrity verification results."}) ;
				- series.push({name:"Voting", title:"Blockchain-based #[em.purecolor electronic voting service] #[br]for voting fairness and anonymity", desc:"Our offline voting technology, powered by hybrid blockchain and accessible through WLAN's captive portal, ensures secure, transparent, and hassle-free electronic voting for authenticated participants."}) ;
				- series.push({name:"Media", title:"Blockchain-based Music #[em.purecolor plagiarism rate detection service] #[br]for a clean copyright market", desc:"Empowering music composition with unprecedented transparency, our blockchain-based metadata and smart contract technology ensure the authenticity and verification of sound sources throughout the creative process."}) ;
				- series.push({name:"World", title:"#[em.purecolor Unlock the Potential] of your Business #[br]in the #[em.purecolor Metaverse with Pure World]", desc:"Pure World was newly developed based on Unity for easier accessibility than before. Connect with various businesses within a metaverse platform incorporating various entertainment contents."}) ;
				- series.push({name:"RX", title:"An #[em.purecolor NFT-Prescription Management] for Efficient #[br]and Secure Healthcare System", desc:"Revolutionizing data management for patients, our NFT-based technology, combined with lightweight blockchain and batch minting, offers up to 46.76% cost savings compared to traditional blockchain solutions in large-scale environments."}) ;
				- series.push({name:"BOMS", title:"Blockchain-enabled #[em.purecolor Organ Matching System] #[br]that is transparent and cannot be forged", desc:"Optimizing the donation process, our algorithm prioritizes placements based on donor and recipient data, ensuring transparency, fairness, and swift medical procedures through automatic notifications."}) ;
				- let ls = series.length ;

				.abs.left0.puremain.pureseries.floatingseries.LmarXXLg.pureblue(style="width:350px;top:130px;z-index:301")
					
					ol.txtL.pureblue.rel(style="top:100px")
						li
							a.indent.black.block.VmarXLg.first.HpadSm.txtL(href="javascript:void(0)" style="padding-bottom:5px;height:25px")
								+pureseries_SVG('series')
						
						- for(let i = 0 ; i < ls ; i++){
							li.context
								a.serieshome.rel.block.flex.flex-row.items-center.HpadSm.gap-x-4.justify-between(href='javascript:void(0)' style="padding-bottom:5px;height:25px;opacity:" + (.8 - ((i)*.2)) + ";")
									span.purecolor.fullH.block.floatL.Rmar
										+pureseries_SVG(series[i].name.toLowerCase(), 'floatL')
									span.flex-grow.fullH.narr
										+arr('fullH', true)
								//- a.serieshome.block.bolder.HpadSm.flex.flex-row.items-center.justify-between(href="javascript:void(0)" style="padding-bottom:5px;height:25px;opacity:" + (.8 - ((i)*.2)) + ";")
									
									+pureseries_SVG(series[i].name.toLowerCase(), 'floatL')
									
									.flex-grow.w-12
										+arrow_dotted_right()
						- }
				
				.slides.dark.fullW.fullH.rel(style="z-index:300")
					.slide.textes.abs(style="bottom:80px;left:45px;margin-right:20px;width:350px;z-index:300")
						.rounded-3xl.p-6.pb-0.txtL
							.catchphrase.sizeSm(class="sm:sizeR")
								h4.montserrat.bolder.sizeXXXLg.lh1.black
									+pureseries_SVG('series')
							.othertextes.sizeSm.Tmar.lh1.pureblue.context
								h3.bold Explore the Pure series
								.Tmar.lh1.purecolor
									p.sizeSm Building the Web3, Ecosystem You Need
							.browseeco.TmarXXXLg.txtR.sizeXSm.rel
								+normalbutton("Browse Ecosystem", "/series/")
					- for(let i = 0 ; i < ls ; i++) {
						- let serie = series[i] ;
						.none.slide.textes.abs.fullH.fullW.left0.right0(id="slide_"+series[i].name style="opacity:0;left:0px")
							.abs.left0.right0.top0(style="bottom:220px;")
								.rel.fullH.fullW.grid.content-end.place-items-end.noselect
									.rel.dark.txtL.pureline.whitetranspplusBG.p-10.zi3(style="width:60%;min-width:450px;border-width:1px 0")
										.catchphrase.sizeXSm(class="sm:sizeR")
											h4.montserrat.sizeXXXLg.lh1.black(style="height:35px")
												+pureseries_SVG(serie.name.toLowerCase())
										.othertextes.sizeSm.TmarXXLg.lh1(style="max-width:500px") 
											h3
												!= render('| ' + serie.title)
											.TmarXXXLg.lh1
												p.sizeSm
													!= render('| ' + serie.desc)
											.Tmar.txtR.Rmar0.sizeSm.rel(style="margin-right:-25px")
												- let cake = "/series/pure", cake2 = "/home/pure" ;
												- let oops = serie.name.toLowerCase() ;
												+smallbutton("More", (oops == 'world' ? cake2 : cake ) + serie.name.toLowerCase() +'/', null, null, 'serieslink')
					- }